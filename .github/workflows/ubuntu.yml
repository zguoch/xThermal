name: Ubuntu
on: 
  push:
    branches: mainx
    # tags:
    #   - 'V*'
env:
  HOME: /home/runner/work/xThermo/xThermo
jobs:
  buildApp:
    name: build xThermo and website
    # ubuntu-latest (ubuntu-20.04: glibc 2.31), ubuntu-18.04 (glibc 2.27), ubuntu-16.04 (glibc 2.23)
    runs-on: ubuntu-18.04
    env:
      AppInstaller: xThermo-Linux-Installer
      access_token: ${{ secrets.access_token }}
      Path_Pythons: /opt/hostedtoolcache/Python
    steps:
      # checkout source code
      - uses: actions/checkout@v2
      
      # # install QT5
      # - name: Install Qt
      #   uses: jurplel/install-qt-action@v2.13.0
      #   with:
      #     version: '5.15.2'
      #     host: 'linux'
      #     target: 'desktop'
      #     dir: '${{ github.workspace }}/QT/'
      
      # install some useful packages 
      - name: install dependence
        run: |
          sudo apt-get update -y
          sudo apt-get install -y tcl-dev
          sudo snap install cqtdeployer
      # install dependencies, e.g. VTK, swig
      - name: install dependencies
        run: |
          git clone https://github.com/zguoch/dependencies_swEOS.git
          # install Arial font
          cp dependencies_swEOS/Arial/* /usr/share/fonts
          fc-cache -fv
          # install vtk
          cd dependencies_swEOS/ubuntu
          unzip -qq VTK8.2.zip
      
      # clone xThermo source
      - name: clone source and compile library
        run: |
          git clone https://${{env.access_token}}@github.com/zguoch/xThermo_source.git xThermo
          cd xThermo
          git submodule update --init --recursive
  
      # get short SHA of commit 
      - name: Add SHORT_SHA env property with commit short sha
        run: |
          cd ${{env.HOME}}/xThermo
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      
      - name: info 
        run: |
          cmake --version
          g++ --version
          echo ${{ github.ref }}
          echo "commit id short" ${SHORT_SHA}
          echo "github tag: " ${GIT_TAG}
          python --version
          ldd --version

      # build ThirdParties: CoolProp need python2
      - name: build ThirdParties
        run: |
          cd ${{env.HOME}}
          cd xThermo
          cd ThirdParties
          bash CoolProp.sh
          bash gsl.sh
      
      - name: Set up Python 3.9 for xThermo API and sphinx doc
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # # debug workflow
      # - name: install oh my zsh
      #   run: |
      #     sudo apt-get install zsh
      #     sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      # build xThermo
      - name: build xThermo
        run: |
          cd ${{env.HOME}}
          cd xThermo
          mkdir build
          cd build
          cmake ..
          make 
          make install
          
      # setup matlab environment
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1

      # build Matlab API
      - name: build Matlab API
        run: |
          cd ${{env.HOME}}
          cd xThermo/Library/API/Matlab
          bash make.sh
          cd ..
          cp -rf Matlab ../../install/API

      # package xThermo
      - name: package library
        run: | 
          cd ${{env.HOME}}
          mkdir xThermo_Linux
          cp -rf xThermo/install/* xThermo_Linux
          zip -r xThermo_Linux.zip xThermo_Linux

      # upload library
      - uses: actions/upload-artifact@v2
        with:
          name: xThermo_Linux_${{ env.SHORT_SHA }}
          path: xThermo_Linux.zip

      # install python packages for sphinx
      - name: install python packages for sphinx
        run: |
          pip install numpy 
          pip install setuptools
          pip install matplotlib
          pip install sphinx
          pip install sphinx-intl
          pip install pybtex
          pip install sphinx_inline_tabs
          pip install sphinx_copybutton
          pip install sphinxcontrib.bibtex
          pip install sphinx_toolbox
          pip install sphinx_rtd_theme
          # rm -fr ~/.cache/matplotlib

      # build sphinx
      - name: sphinx doc
        run: |
          cd ${{env.HOME}}
          cd xThermo/doc/sphinx
          make html
      
      # deploy website
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.access_token }}
          publish_dir: ./xThermo/doc/sphinx/build/html

