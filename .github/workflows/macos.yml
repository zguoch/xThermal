name: MacOS
on: 
  push:
    branches: mainx
    tags:
      - 'V*'
jobs:
  buildApp:
    name: build xThermo
    runs-on: macos-latest
    env:
      MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
      MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      TMP_PWD: hydrothermalfoam
      APPLEDEVELOPERID_APP: ${{ secrets.APPLEDEVELOPERID_APP }}
      access_token: ${{ secrets.access_token }}
      SourceCodeRepoPWD: ${{ secrets.SourceCodeRepoPWD }}
      QT_DIR: /usr/local/Cellar/qt@5/5.15.2
      Path_Pythons: /Users/runner/hostedtoolcache/Python
      AppInstaller: xThermo-MacOSX-Installer
      HOME: /Users/runner/work/xThermo/xThermo
    steps:
      # checkout source code
      - uses: actions/checkout@v2
      - name: install dependence
        run: |
          # brew install tcl-tk
          brew install swig
          brew install libomp
          brew install automake
          brew install hugo
          # brew install vtk@8.2
          # export LDFLAGS="-L/usr/local/opt/vtk@8.2/lib"
          # export CPPFLAGS="-I/usr/local/opt/vtk@8.2/include"
      
      # clone xThermo source
      - name: clone source and compile library
        run: |
          git clone https://${{env.access_token}}@github.com/zguoch/xThermo_source.git xThermo
          cd xThermo
          git submodule update --init --recursive
  
      # get short SHA of commit 
      - name: Add SHORT_SHA env property with commit short sha
        run: |
          cd ${{env.HOME}}/xThermo
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      
      # print some information
      - name: info 
        run: |
          cmake --version
          g++ --version
          echo ${{ github.ref }}
          echo "Short commit ID of xThermo is " ${SHORT_SHA}
          echo "Git tag of xThermo is : " ${GIT_TAG}
          python3 --version
      
      # setup matlab environment
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1

      # build ThirdParties
      - name: build ThirdParties
        run: |
          cd ${{env.HOME}}
          cd xThermo
          cd ThirdParties
          bash CoolProp.sh
          bash gsl.sh

      # build xThermo
      - name: build xThermo
        run: |
          cd ${{env.HOME}}
          cd xThermo
          mkdir build
          cd build
          cmake ..
          make 
          make install
          

      # # debug workflow through ssh
      # - name: install oh my zsh
      #   run: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      # build Matlab API
      - name: build Matlab API
        run: |
          cd ${{env.HOME}}
          cd xThermo/Library/API/Matlab
          bash make.sh
          cd ..
          cp -rf Matlab ../../install/API

      # package xThermo
      - name: package library
        run: | 
          cd ${{env.HOME}}
          # mkdir xThermo_OSX
          # cp -rf xThermo/install/* xThermo_OSX
          zip -r xThermo_OSX.zip xThermo/install
          
      # upload library
      - uses: actions/upload-artifact@v2
        with:
          name: xThermo_OSX_${{ env.SHORT_SHA }}
          path: xThermo_OSX.zip
      
      # # tag 上传Release
      # - name: uploadRelease
      #   if: startsWith(github.event.ref, 'refs/tags/')
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: desktop/build/${{env.AppInstaller}}.dmg
      #     asset_name: ${{env.AppInstaller}}.dmg
      #     tag: ${{ github.ref }}
      #     overwrite: true
      # # tag upload Python APIs
      # - name: uploadRelease
      #   if: startsWith(github.event.ref, 'refs/tags/')
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: API_Python_MacOSX.zip
      #     asset_name: API_Python_MacOSX.zip
      #     tag: ${{ github.ref }}
      #     overwrite: true
