name: Windows
on: 
  push:
    branches: mainx
    tags:
      - 'V*'
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: Library/build
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64
  PYTHON_PATH: C:/hostedtoolcache/windows/Python/3.8.10/x64
  BASIC_PYTHON: 3.9
  HOME: D:/a/xThermal/xThermal
  AppInstaller: xThermal-Windows-Installer
  access_token: ${{ secrets.access_token }}
jobs:
  buildApp:
    name: library
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.10, 3.11]
        # python:
          # - {version: '2.7', lib: 'python27.lib' }
          # - {version: '3.5', lib: 'python35.lib' }
          # - {version: '3.6', lib: 'python36.lib' }
          # - {version: '3.7', lib: 'python37.lib' }
          # - {version: '3.8', lib: 'python38.lib' }
          # - {version: '3.9', lib: 'python39.lib' }
    steps:
      # checkout source code
      - uses: actions/checkout@v3

      # config msbuild
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      # install Qt5
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.0
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          dir: '${{ github.workspace }}/QT/'

      # install dependencies, e.g. VTK, swig
      - name: install dependencies
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          git clone https://github.com/zguoch/dependencies_swEOS.git dependencies_xThermal
          cd dependencies_xThermal/windows
          unzip -qq swigwin-4.0.2.zip
          unzip -qq VTK_9.2-static.zip
          unzip -qq gsl-msvc14-x64.2.3.0.2779.zip
          unzip -qq gsl-msvc14-x86.2.3.0.2779.zip

      # clone xThermal source
      - name: clone source and compile library
        run: |
          git clone https://${{env.access_token}}@github.com/zguoch/xThermal_source.git xThermal
          cd xThermal
          git submodule update --init --recursive

      # - name: Set up Python version
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: ${{ matrix.python.version }}

      # get short SHA of commit 
      - name: Add SHORT_SHA env property with commit short sha
        run: |
          cd ${{env.HOME}}
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: info 
        run: |
          cmake --version
          g++ --version
          echo ${{ github.ref }}
          echo "Short commit ID of xThermal is $SHORT_SHA"
          python --version

      # setup matlab environment
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      # build ThirdParties
      - name: build ThirdParties
        run: |
          cd ${{env.HOME}}
          cd xThermal
          cd ThirdParties
          # compile coolProp
          cd coolprop
          git apply ../CoolProp_patches/381c8535.patch
          mkdir build
          cd build
          # build shared libs
          cmake -DCOOLPROP_INSTALL_PREFIX=${{env.HOME}}/xThermal/ThirdParties/install/CoolProp -DCOOLPROP_SHARED_LIBRARY=ON -G "Visual Studio 17 2022" -DCMAKE_GENERATOR_PLATFORM=${{env.BUILD_PLATFORM}} ..
          cmake --build . --target INSTALL --config Release -j 8
          # build static libs
          # rm -r *
          cmake -DCOOLPROP_INSTALL_PREFIX=${{env.HOME}}/xThermal/ThirdParties/install/CoolProp -DCOOLPROP_STATIC_LIBRARY=ON -G "Visual Studio 17 2022" -DCMAKE_GENERATOR_PLATFORM=${{env.BUILD_PLATFORM}} ..
          cmake --build . --target INSTALL --config Release -j 8

      # build xThermal
      - name: build xThermal
        run: |
          cd ${{env.HOME}}
          cd xThermal
          mkdir build
          cd build
          # build static libraries and python API
          cmake -DVTK_DIR=${{env.HOME}}/dependencies_xThermal/windows/VTK_9.2-static/Releasex64/lib/cmake/vtk-9.2 ..
          cmake --build . --target INSTALL --config Release
          # build shared libraries
          cmake -DBUILD_SHARED=ON ..
          cmake --build . --target INSTALL --config Release
          # build matlab api
          cmake -DBuild_API_Matlab=ON -DBUILD_SHARED=ON -DMATLAB_DIR=D:/hostedtoolcache/windows/MATLAB/2024.2.999/x64 ..
          cmake --build . --target INSTALL --config Release
          cmake -DBUILD_SHARED=OFF
          cmake --build . --target INSTALL --config Release

      
      # package xThermal
      - name: package library
        run: | 
          cd ${{env.HOME}}
          mkdir xThermal_Windows
          cp -r xThermal/install/* xThermal_Windows
          7z a -tzip xThermal_Windows.zip xThermal_Windows
          
      #   # debug workflow
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      # upload library
      - uses: actions/upload-artifact@v3
        with:
          name: xThermal_Windows_${SHORT_SHA}
          path: xThermal_Windows.zip
